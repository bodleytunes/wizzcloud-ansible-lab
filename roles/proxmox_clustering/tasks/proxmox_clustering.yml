- name: set vars - get dict
  set_fact:
    user_passwords: "{{ users | items2dict(key_name='name', value_name='password') }}"
 # convert the list to dict

- name: set vars - get password
  set_fact:
    root_password: "{{ user_passwords.root }}"

- name: Create Proxmox Cluster
  command: pvecm create {{ proxmox_cluster.cluster_name }} --link0 {{ zt_ip }}
  register: result
  until: result is succeeded
  args:
    creates: /etc/pve/corosync.conf
  when: "'proxmox_master' in group_names"



- name: install python-pip
  apt:
    name: python-pip
    state: present
  become: yes

- name: install pexpect
  pip:
    name: pexpect
  become: yes


- name: Adding node to proxmox cluster
  expect:
    command: pvecm add {{ proxmox_cluster.cluster_master_hostname }} --link0 {{ zt_ip }}
    responses:
      'password for': "{{ root_password }}"
      '(?i)fingerprint': "yes"
    echo: yes
    timeout: 120
    # don't run if corosync already exists
    creates: /etc/pve/corosync.conf
 # when: ansible_hostname != CLUSTER_MASTER_NODE_HOSTNAME
  no_log: false
  become: yes
  #when: "'proxmox_master' in group_names"
  when: "'proxmox_master' not in group_names"
  register: result

