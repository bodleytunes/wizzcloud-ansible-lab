- name: Disable SWAP since kubernetes can't work with swap enabled (1/2)
  shell: |
    swapoff -a

- name: Disable SWAP in fstab since kubernetes can't work with swap enabled (2/2)
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'




- name: Download K3S Script
  get_url:
    url: https://get.k3s.io
    dest: /root/k3s.sh
    mode: a+x



- name: install K3s Master
  shell: |
    /root/k3s.sh --cluster-init  --node-ip {{ kubernetes.k3s.node_ip }} --kube-apiserver-arg default-not-ready-toleration-seconds=10 --kube-apiserver-arg default-unreachable-toleration-seconds=10 --disable traefik --disable servicelb
  environment:
    #INSTALL_K3S_VERSION: "{{ kubernetes.k3s.k3s_version }}"
    INSTALL_K3S_CHANNEL: stable
    K3S_TOKEN: "{{ kubernetes.k3s.k3s_token }}"
  args:
    chdir: /root
  retries: 8
  delay: 3
  when: " 'kube1' in inventory_hostname "
  ignore_errors: true
  become: yes



- name: install K3s Slaves
  shell: |
    /root/k3s.sh --server https://{{ kubernetes.k3s.k3s_server_ip }}:6443  --node-ip {{ kubernetes.k3s.node_ip}} --kube-apiserver-arg default-not-ready-toleration-seconds=10 --kube-apiserver-arg default-unreachable-toleration-seconds=10 --disable traefik --disable servicelb
  environment:
    #INSTALL_K3S_VERSION: "{{ kubernetes.k3s.k3s_version }}"
    INSTALL_K3S_CHANNEL: stable
    K3S_TOKEN: "{{ kubernetes.k3s.k3s_token }}"
  args:
    chdir: /root
  retries: 8
  delay: 3
  when: " 'kube1' not in inventory_hostname "
  ignore_errors: true
  become: yes


# #- name: Install and create master
# #  shell: |
# #    sudo curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ kubernetes.k3s.k3s_version }} K3S_TOKEN={{ kubernetes.k3s.k3s_token }} sh -s - --cluster-init  --node-ip {{ kubernetes.k3s.node_ip }} --kube-apiserver-arg default-not-ready-toleration-seconds=10 --kube-apiserver-arg default-unreachable-toleration-seconds=10 --disable traefik --disable servicelb
# #  when: " 'kube1' in inventory_hostname "
# #  ignore_errors: true

# #- name: Install and join
# #  shell: |
# #    sudo curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ kubernetes.k3s.k3s_version }} K3S_TOKEN={{ kubernetes.k3s.k3s_token }} sh -s - --server https://{{ kubernetes.k3s.k3s_server_ip }}:6443  --node-ip {{ kubernetes.k3s.node_ip}} --kube-apiserver-arg default-not-ready-toleration-seconds=10 --kube-apiserver-arg default-unreachable-toleration-seconds=10 --disable traefik --disable servicelb
# #  when: " 'kube1' not in inventory_hostname "
#  # ignore_errors: true



# -----


# # Taken from k3s-io on github
# - name: Download k3s binary x64
#   get_url:
#     url: https://github.com/k3s-io/k3s/releases/download/{{ kubernetes.k3s.k3s_version }}/k3s
#     #checksum: sha256:https://github.com/k3s-io/k3s/releases/download/{{ kubernetes.k3s.k3s_version }}/sha256sum-amd64.txt
#     dest: /usr/local/bin/k3s
#     owner: root
#     group: root
#     mode: 0755
#   when: ansible_facts.architecture == "x86_64"

# - name: Copy K3s service file
#   register: k3s_service
#   template:
#     src: "k3s.service.j2"
#     dest: "{{ systemd_dir }}/k3s.service"
#     owner: root
#     group: root
#     mode: 0644

# - name: Enable and check K3s service
#   systemd:
#     name: k3s
#     daemon_reload: yes
#     state: restarted
#     enabled: yes

# - name: Wait for node-token
#   wait_for:
#     path: /var/lib/rancher/k3s/server/node-token

# - name: Register node-token file access mode
#   stat:
#     path: /var/lib/rancher/k3s/server
#   register: p

# - name: Change file access node-token
#   file:
#     path: /var/lib/rancher/k3s/server
#     mode: "g+rx,o+rx"

# - name: Read node-token from master
#   slurp:
#     src: /var/lib/rancher/k3s/server/node-token
#   register: node_token

# - name: Store Master node-token
#   set_fact:
#     token: "{{ node_token.content | b64decode | regex_replace('\n', '') }}"

# - name: Restore node-token file access
#   file:
#     path: /var/lib/rancher/k3s/server
#     mode: "{{ p.stat.mode }}"

# - name: Create directory .kube
#   file:
#     path: ~{{ ansible_user }}/.kube
#     state: directory
#     owner: "{{ ansible_user }}"
#     mode: "u=rwx,g=rx,o="

# - name: Copy config file to user home directory
#   copy:
#     src: /etc/rancher/k3s/k3s.yaml
#     dest: ~{{ ansible_user }}/.kube/config
#     remote_src: yes
#     owner: "{{ ansible_user }}"
#     mode: "u=rw,g=,o="

# - name: Replace https://localhost:6443 by https://master-ip:6443
#   command: >-
#     k3s kubectl config set-cluster default
#       --server=https://{{ kubernetes.k3s.k3s_server_ip }}:6443
#       --kubeconfig ~{{ ansible_user }}/.kube/config
#   changed_when: true   

# - name: Create kubectl symlink
#   file:
#     src: /usr/local/bin/k3s
#     dest: /usr/local/bin/kubectl
#     state: link

# - name: Create crictl symlink
#   file:
#     src: /usr/local/bin/k3s
#     dest: /usr/local/bin/crictl
#     state: link