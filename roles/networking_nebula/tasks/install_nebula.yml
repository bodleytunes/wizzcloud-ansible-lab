---
- name: Download nebula binaries
  get_url:
    url: https://github.com/slackhq/nebula/releases/download/{{nebula_version}}/nebula-linux-amd64.tar.gz
    dest: /tmp/nebula-linux-amd64.tar.gz

- name: Extract nebula binaries to the app directory
  unarchive:
    remote_src: yes
    src: /tmp/nebula-linux-amd64.tar.gz
    dest: /var/lib/nebula


# get all the inbound rules 
- name: get all inbound rules
  set_fact:
    host_inbound: "{{ nebula_inbound_rules }}"
    group_inbound: "{{ group_nebula_inbound_rules }}"
    global_inbound: "{{ global_nebula_inbound_rules }}"

- name: show host
  debug: var=host_inbound
- name: show group
  debug: var=group_inbound
- name: show global
  debug: var=global_inbound

# merge all the inbound rules
- name: merge all inbound rules
  set_fact:
    all_inbound_rules: "{{ host_inbound + group_inbound + global_inbound }}"


- name: Set Nebula config
  template:
    src: templates/config.yml.j2
    dest: /etc/nebula/config.yml
    owner: nebula
    group: nebula
    mode: '0644'
  vars:
    lighthouses: "{{ groups['nebula_lighthouses'] }}"
    nebula_inbound_rules: "{{ all_inbound_rules }}"


- name: Set Nebula service
  template:
    src: files/nebula.service
    dest: /etc/systemd/system/nebula.service
    owner: root
    group: root
    mode: '0755'
  notify:
    - "Start Nebula node service"