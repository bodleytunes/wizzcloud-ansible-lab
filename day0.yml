---
# only run this first one with specific tags
- hosts: ovh
  gather_facts: false
  become: True
  any_errors_fatal: true
  tasks:
    - import_role:
        name: ovh
      tags: ['ovh_wipe', 'never']

#- hosts:
#  - baremetal_hosts
#  - proxmox_nodes
#  - proxmox_qnodes
#  - terraform_vms
#  - virtual_machines
#  - load_balancers
#  - plex_servers
#  - kubernetes_vms
#  - lisk
#  gather_facts: false
#  any_errors_fatal: true
#  become: true
#  vars:
#    delegate_facts_host: True
#  tasks:
#    - import_role:
#        name: common

- hosts: baremetal_hosts
  gather_facts: true
  become: True
  any_errors_fatal: true
  strategy: free
  tags: ['host_pre']
  tasks:
    - import_role:
        name: day0_pre
      tags: ['day0_pre']
    - import_role:
        name: users
      tags: ['users']
    - import_role:
        name: ssh_keys
      tags: ['ssh_keys']
    - import_role:
        name: install_required_packages
      tags: ['install_required_packages']
    - import_role:
        name: zerotier_networking
      tags: ['zerotier_networking']
    - import_role:
        name: proxmox
      tags: ['proxmox']
    - import_role:
        name: common
        tasks_from: install_docker

- hosts: baremetal_hosts
  gather_facts: true
  become: True
  any_errors_fatal: true
  serial: 1
  tags: ['freeipa']
  tasks:
    - import_role:
        name: freeipa
      tags: ['freeipa']
    - import_role:
        name: freeipa_users
      tags: ['freeipa_users']

- hosts: baremetal_hosts
  gather_facts: true
  become: True
  any_errors_fatal: true
  strategy: free
  tags: ['wireguard']
  tasks:
    - import_role:
        name: githubixx.ansible_role_wireguard
      tags: ['wireguard']


# break out to clustering role which needs to be linear
- hosts: baremetal_hosts
  gather_facts: false
  become: True
  any_errors_fatal: true
  # serial is used to run in sequence - i.e. one host at a time
  serial: 1  
  tags: ['phase2']
  tasks:
    - import_role:
        name: proxmox_clustering
      tags: ['proxmox_clustering']



- hosts: baremetal_hosts
  gather_facts: true
  become: True
  any_errors_fatal: true
  strategy: free
  tags: ['networking']
  tasks:
    - import_role:
        name: networking
      tags: ['networking']
    - import_role:
        name: firewall
      tags: ['firewall']


- hosts: baremetal_hosts
  gather_facts: true
  become: True
  any_errors_fatal: true
  strategy: free
  tags: ['lxd']
  tasks:
    - import_role:
        name: lxd
      tags: ['lxd']

# serial run 
- hosts: baremetal_hosts
  gather_facts: true
  become: True
  any_errors_fatal: true
  tags: ['overlay_networking']
  serial: 1
  tasks:
    - import_role:
        name: networking_nebula
      tags: ['networking_nebula']





- hosts: baremetal_hosts
  gather_facts: true
  become: True
  any_errors_fatal: true
  serial: 1
  tags: ['dhcp_servers']
  tasks:
    - import_role:
        name: bertvv.dhcp
      tags: ['dhcp_servers']

- hosts: baremetal_hosts
  gather_facts: true
  become: True
  any_errors_fatal: true
  strategy: linear
  tags: ['storage']
  tasks:
    - import_role:
        name: storage_configuration
      tags: ['storage']
#    - import_role:
#        name: storage_linstor
#      tags: ['storage_linstor']


- hosts: baremetal_hosts
  gather_facts: true
  become: True
  any_errors_fatal: true
  strategy: linear
  tags: ['vm_pre']
  tasks:
    - import_role:
        name: proxmox_vm
      tags: ['proxmox_vm']

- hosts: terraform_control
  gather_facts: false
  become: True
  any_errors_fatal: true
  tags: ['vm_deploy']
  tasks:
    - import_role:
        name: terraform
      tags: ['terraform_deploy']

- hosts: terraform_control
  gather_facts: false
  become: True
  any_errors_fatal: true
  tasks:
    - import_role:
        name: terraform_destroy
      tags: ['terraform_destroy']

# Virtual Machines prep
- hosts: virtual_machines
  gather_facts: false
  become: True
  tags: ['vm_post']
  #any_errors_fatal: true
  tasks:
    - import_role:
        name: vm_networking
      tags: ['vm_networking']
    - import_role:
        name: install_required_packages
      tags: ['install_required_packages']
      
#- hosts: 
#    - teleport_auth_servers
#    - teleport_proxy_servers
#    - teleport_clients
#  gather_facts: true
#  become: True
#  any_errors_fatal: true
#  strategy: linear
#  serial: 1
#  tags: ['gravitational_teleport']
#  tasks:
#    - import_role:
#        name: gravitational_teleport
#      tags: ['gravitational_teleport']

- import_playbook: playbooks/run_once/configure_teleport_servers.yml
  tags: ['gravitational_teleport']

#- hosts: kubernetes_servers
#  gather_facts: false
#  become: True
#  any_errors_fatal: true
#  tags: ['phase8']
#  tasks:
#    - import_role:
#        name: vm_configuration_kubernetes
#        tasks_from: filesystem_changes
#      tags: ['vm_configuration_kubernetes']
#    - import_role:
#        name: vm_configuration_kubernetes
#        tasks_from: pre_checks
#      tags: ['vm_configuration_kubernetes']
#    - import_role:
#        name: vm_configuration_kubernetes
#        tasks_from: install_packages
#      tags: ['vm_configuration_kubernetes']

# enroll to freeipa 
- hosts: ipa_clients
  gather_facts: true
  become: True
  any_errors_fatal: true
  tags: ['freeipa_client']
  tasks:
    - import_role:
        name: freeipa_client
      tags: ['freeipa_client']


- import_playbook: playbooks/run_once/vm_configuration_kubernetes.yml
  tags: ['k3s_deploy']




- hosts: docker_hosts
  gather_facts: false
  become: True
  any_errors_fatal: true
  tags: ['docker']
  tasks:
    - import_role:
        name: common
        tasks_from: install_docker

  
- hosts: pritunl_servers
  gather_facts: false
  become: True
  any_errors_fatal: true
  tags: ['pritunl_server']
  tasks:
    - import_role:
        name: install_required_packages
        tasks_from: install_baseline_packages_vm
  # install FRR on auth server as it is advertising anycast loopback to the host with eBGP
    - include_role: # loop through to pull in multiple tasks (only works with include)
        name: networking
        tasks_from: '{{ item }}'
      loop:
        - install_frr
        - configure_frr_anycast_vm
    - import_role:
        name: openvpn_pritunl
      tags: ['pritunl_server']


- hosts: kubernetes_master
  gather_facts: true
  become: True
  any_errors_fatal: true
  tags: ['k3s_apps']
  tasks:
    - import_role:
        name: rancher
      tags: ['rancher']

#- hosts: baremetal_hosts
#  gather_facts: false
#  become: True
#  any_errors_fatal: true
#  tasks:
#    - import_role: 
#        name: powerdns
#      tags: ['powerdns']


      #vars:
      #  - ansible_python_interpreter: "/usr/bin/python2.7"

#- hosts: plex_servers
#  gather_facts: false
#  become: True
#  any_errors_fatal: true
#  tasks:
#    - import_role:
#        name: vm_configuration_plex
#      tags: ['vm_configuration_plex']
#
#
#- hosts: load_balancers
#  gather_facts: false
#  become: True
#  any_errors_fatal: true
#  tasks:
#    - import_role:
#        name: vm_configuration_load_balancers
#      tags: ['vm_configuration_load_balancers']